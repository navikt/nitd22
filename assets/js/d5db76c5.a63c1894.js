"use strict";(self.webpackChunknitd_22=self.webpackChunknitd_22||[]).push([[479],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return k}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(t),k=o,f=m["".concat(l,".").concat(k)]||m[k]||d[k]||a;return t?n.createElement(f,i(i({ref:r},c),{},{components:t})):n.createElement(f,i({ref:r},c))}));function k(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7077:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={title:"Kode som uttrykksform - live-koding av musikk i Haskell",hide_table_of_contents:!0,sidebar_custom_props:{start:"12:25",length:10,speakers:"Ulrik Halm\xf8y",track:2}},l=void 0,u={unversionedId:"foredrag/kode-som-uttrykksform",id:"foredrag/kode-som-uttrykksform",title:"Kode som uttrykksform - live-koding av musikk i Haskell",description:"Miniforedrag om morsom bruk av kode til \xe5 generere lyd eller musikk.",source:"@site/docs/foredrag/kode-som-uttrykksform.md",sourceDirName:"foredrag",slug:"/foredrag/kode-som-uttrykksform",permalink:"/docs/foredrag/kode-som-uttrykksform",editUrl:"https://github.com/navikt/nitd22/blob/main/docs/foredrag/kode-som-uttrykksform.md",tags:[],version:"current",frontMatter:{title:"Kode som uttrykksform - live-koding av musikk i Haskell",hide_table_of_contents:!0,sidebar_custom_props:{start:"12:25",length:10,speakers:"Ulrik Halm\xf8y",track:2}},sidebar:"tutorialSidebar",previous:{title:"Hvorfor skal produktteam bruke NADA?",permalink:"/docs/foredrag/hvorfor-skal-produktteam-bruke-nada"},next:{title:"Kvitt deg med den tekniskegjelden da, en gang for alle",permalink:"/docs/foredrag/kvitt-deg-med-teknisk-gjeld"}},c={},d=[],m={toc:d};function k(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Miniforedrag om morsom bruk av kode til \xe5 generere lyd eller musikk.\nIdeen er forel\xf8pig ganske s\xe5 upolert, men jeg har hatt lyst \xe5 ta for meg enten sox (",(0,a.kt)("a",{parentName:"p",href:"http://sox.sourceforge.net/"},"http://sox.sourceforge.net/"),"), et kommandolinjeverkt\xf8y for \xe5 prosessere lyd, eller TidalCycles (",(0,a.kt)("a",{parentName:"p",href:"https://tidalcycles.org/docs/"},"https://tidalcycles.org/docs/"),'), et Haskell-milj\xf8 for \xe5 drive med ""live coding"" av rytmer og musikalske strukturer.'),(0,a.kt)("p",null,"Det har ikke s\xe5 mye med NAV \xe5 gj\xf8re, men jeg synes det hadde v\xe6rt morsomt \xe5 vise frem litt alternative m\xe5ter \xe5 anvende kodeskriving p\xe5. Kanskje man kunne f\xe5tt et lite algoritmisk husband i NAV IT p\xe5 sikt :'-)"))}k.isMDXComponent=!0}}]);